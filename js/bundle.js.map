{"version":3,"sources":["webpack/bootstrap 7c3cd754b152a03eb970","./js/main.js","./js/snake.js","./js/coordinate.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;AACA;;;;;;;ACJA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;AC5BA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/js/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 7c3cd754b152a03eb970\n **/","var Snake = require(\"./snake.js\");\nvar Coord = require(\"./coordinate.js\");\n\nwindow.Coord = Coord;\nwindow.Snake = Snake;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/main.js\n ** module id = 0\n ** module chunks = 0\n **/","var Coord = require(\"./coordinate.js\");\n\nfunction Snake(startingPosition) {\n  this.direction = [0, 0];\n  this.segments = [startingPosition];\n}\n\nSnake.DIRECTIONS = {\n  \"N\": [0, -1],\n  \"E\": [1, 0],\n  \"S\": [0, 1],\n  \"W\": [-1, 0]\n};\n\nSnake.prototype.move = function() {\n  var newSegment = (new Coord(this.segments[0])).plus(this.direction);\n  this.segments.unshift(newSegment);\n  this.segments.pop();\n};\n\nSnake.prototype.turn = function(newDirection) {\n  var dirVect = Snake.DIRECTIONS[newDirection];\n\n  if (!(new Coord(this.direction).isOpposite(dirVect))) {\n    this.direction = dirVect;\n  }\n};\n\nmodule.exports = Snake;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/snake.js\n ** module id = 1\n ** module chunks = 0\n **/","function Coord(pos) {\n  this.x = pos[0];\n  this.y = pos[1];\n}\n\nCoord.prototype.plus = function(vector) {\n  var x = this.x + vector[0];\n  var y = this.y + vector[1];\n  return [x,y];\n};\n\nCoord.prototype.equals = function(otherPos) {\n  return (this.x === otherPos[0]) && (this.y === otherPos[1]);\n};\n\nCoord.prototype.isOpposite = function(otherPos) {\n  var oppX = this.x * -1;\n  var oppY = this.y * -1;\n\n  return (oppX === otherPos[0]) && (oppY === otherPos[1]);\n};\n\nmodule.exports = Coord;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/coordinate.js\n ** module id = 2\n ** module chunks = 0\n **/"],"sourceRoot":""}